{"version":3,"sources":["Card.js","BookSearch.js","MyDive.js","App.js","serviceWorker.js","index.js","logo1.svg"],"names":["Card","state","bookData","oldvalue","picLink","myData","componentDidMount","titleChange","_this","myApi","concat","props","xx","fetch","then","response","json","data","setState","items","catch","error","stringCheck","str","substring","_this2","this","temp","map","x","i","myImg","volumeInfo","imageLinks","thumbnail","_unused","react_default","a","createElement","className","key","style","width","src","alt","title","description","authors","pageCount","href","infoLink","Component","BookSearch","value","searchedTitle","myForm","datax","formPreventDefault","e","alert","console","log","preventDefault","handleChangeFrom","event","target","onSubmit","onChange","type","placeholder","aria-describedby","Card_Card","MyDive","loading","info","BookSearch_BookSearch","App","logo1","MyDive_MyDive","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.1fb20910.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Card extends Component {\r\n  state = {\r\n    bookData: []\r\n  };\r\n  oldvalue = \"\";\r\n  picLink = \"\";\r\n  myData = [];\r\n  componentDidMount = () => {};\r\n  titleChange = () => {\r\n    this.myApi = `https://www.googleapis.com/books/v1/volumes?q=${\r\n      this.props.xx\r\n    }&maxResults=40`;\r\n    fetch(this.myApi)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({ bookData: data.items });\r\n        this.myData = data.items;\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error: true });\r\n        //console.log(\"Oops!\");\r\n      });\r\n  };\r\n\r\n  stringCheck = str => {\r\n    if (typeof str !== \"undefined\") {\r\n      return str.substring(0, 80);\r\n    } else {\r\n      return \"No description\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let temp = this.state.bookData.map((x, i) => {\r\n      let myImg;\r\n      try {\r\n        myImg = x.volumeInfo.imageLinks.thumbnail;\r\n      } catch {\r\n        myImg = \"./Oops.png\";\r\n      }\r\n      return (\r\n        <div className=\"container\" key={i}>\r\n          <div className=\"card my-card\" style={{ width: \"15rem\" }}>\r\n            <img className=\"card-img-top my-image\" src={myImg} alt=\"Oops!\" />\r\n            <div className=\"card-body my-card\">\r\n              <h5 className=\"card-title\">{x.volumeInfo.title}</h5>\r\n              <p className=\"card-text\">\r\n                {this.stringCheck(x.volumeInfo.description)}...\r\n              </p>\r\n              <p>\r\n                <b>Authors:</b> {x.volumeInfo.authors}\r\n              </p>\r\n              <p>\r\n                <b>Number of Pages:</b> {x.volumeInfo.pageCount}\r\n              </p>\r\n\r\n              <a href={x.volumeInfo.infoLink} className=\"btn btn-primary\">\r\n                More info\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    if (this.props.xx !== \"\") {\r\n      if (this.oldvalue !== this.props.xx) {\r\n        this.titleChange();\r\n        this.oldvalue = this.props.xx;\r\n      }\r\n\r\n      return <div className=\"my-div container-fluid card-columns \">{temp}</div>;\r\n    } else {\r\n      return <div className=\"container\">Search somthing!</div>;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nexport default class BookSearch extends Component {\r\n  value = \"\";\r\n  myApi = \"xxx\";\r\n  searchedTitle = \"\";\r\n  state = {\r\n    myForm: \"\",\r\n    datax: \"\"\r\n  };\r\n\r\n  formPreventDefault = e => {\r\n    //alert(this.myApi);\r\n    if (this.value === \"\") {\r\n      alert(\"You should type a title!\");\r\n    } else {\r\n      this.setState({ datax: this.value });\r\n      this.searchedTitle = this.value;\r\n      console.log(this.searchedTitle);\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  handleChangeFrom = event => {\r\n    this.setState({ myForm: event.target.value });\r\n    this.value = event.target.value;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <br />\r\n\r\n        <div className=\"container\">\r\n          <form\r\n            onSubmit={this.formPreventDefault}\r\n            onChange={this.handleChangeFrom}\r\n          >\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Type a book title\"\r\n                aria-describedby=\"basic-addon2\"\r\n              />\r\n              <div className=\"input-group-append\">\r\n                &nbsp;\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <Card xx={this.searchedTitle} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n// import Card from \"./Card\";\r\nimport BookSearch from \"./BookSearch\";\r\n// import SelectCurrency from \"./SelectCurrency\";\r\n\r\nexport default class MyDive extends Component {\r\n  state = {\r\n    datax: [],\r\n    loading: true,\r\n    info: []\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"conainer\">\r\n        <BookSearch />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport logo1 from \"./logo1.svg\";\nimport \"./App.css\";\nimport MyDive from \"./MyDive\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <br />\n      <p className=\"Center\">\n        <img src={logo1} className=\"Mylogo\" alt=\"logo1\" />\n      </p>\n\n      <h1 className=\"Center\">Book search</h1>\n      <MyDive />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo1.dae3891c.svg\";"],"sourceRoot":""}